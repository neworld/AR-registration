/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdlib.h>
#include <android/log.h>
#include <stdio.h>
/* Header for class lt_neworld_arRegistration_Process */

#ifndef _Included_lt_neworld_arRegistration_Process
#define _Included_lt_neworld_arRegistration_Process
#ifdef __cplusplus
extern "C" {
#endif
#undef lt_neworld_arRegistration_Process_MIN_PRIORITY
#define lt_neworld_arRegistration_Process_MIN_PRIORITY 1L
#undef lt_neworld_arRegistration_Process_NORM_PRIORITY
#define lt_neworld_arRegistration_Process_NORM_PRIORITY 5L
#undef lt_neworld_arRegistration_Process_MAX_PRIORITY
#define lt_neworld_arRegistration_Process_MAX_PRIORITY 10L
#undef lt_neworld_arRegistration_Process_FRAMES_FOR_COUNT
#define lt_neworld_arRegistration_Process_FRAMES_FOR_COUNT 20L
#undef lt_neworld_arRegistration_Process_COLOR_PICKING_AREA
#define lt_neworld_arRegistration_Process_COLOR_PICKING_AREA 16L
#undef lt_neworld_arRegistration_Process_COLOR_TRESHOLD
#define lt_neworld_arRegistration_Process_COLOR_TRESHOLD 10L
/*
 * Class:     lt_neworld_arRegistration_Process
 * Method:    process
 * Signature: ([BIBB)[I
 */
JNIEXPORT jintArray JNICALL Java_lt_neworld_arRegistration_Process_process
  (JNIEnv *, jobject, jbyteArray, jint, jint, jbyte, jbyte);

#ifdef __cplusplus
}
#endif
#endif

#define false  0
#define true   1
#define TRESHOLD  10
#define MAX_BLOBS 100

typedef struct Stack Stack;

struct Stack{
	int index;
	Stack *up;
};

void push(Stack **steps, int index);
int pop(Stack **steps);
inline jboolean empty(Stack *steps);
inline jboolean good(int index);

inline int min(int a, int b);
inline int max(int a, int b);
